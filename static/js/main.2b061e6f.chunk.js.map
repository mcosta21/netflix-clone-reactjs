{"version":3,"sources":["assets/icon-amazon.png","assets/icon-netflix.png","Tmdb.js","components/MovieRow/index.js","components/FeaturedMovie/index.js","components/Header/index.js","pages/Home/index.js","pages/Details/index.js","routes.js","screen/index.js","index.js"],"names":["module","exports","API_KEY","basicFetch","endpoint","a","fetch","req","json","getHomeList","slug","title","type","items","getMovieInfo","movieId","info","getTrailerVideo","trailer","MovieRow","useState","scrollX","setScrollX","className","onClick","x","Math","round","window","innerWidth","style","fontSize","listW","results","length","marginLeft","width","map","item","key","poster_path","to","id","alt","original_title","src","FeaturedMovie","firstDate","Date","first_air_date","genres","i","push","name","description","overview","substring","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","join","Header","black","href","Home","featuredData","setFeaturedData","movieList","setMovieList","blackHeader","setBlackHeader","useEffect","Tmdb","list","originals","filter","randomChosen","floor","random","movieChosen","movieChosenData","loadAll","scrollListener","scrollY","addEventListener","removeEventListener","target","rel","role","aria-label","Details","useParams","movieDetails","setMovieDetails","trailerVideo","setTrailerVideo","urlVideo","setUrlVideo","videoFullScreen","setVideoFullScreen","descriptionVideo","setDescriptionVideo","movie","undefined","url","handleShowTrailer","homepage","includes","iconNetflix","iconAmazon","frameBorder","height","Routes","basename","process","path","exact","component","Screen","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b061e6f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-amazon.f42807c1.png\";","module.exports = __webpack_public_path__ + \"static/media/icon-netflix.262e5be1.png\";","const API_KEY = 'b9183c5c2d36811f09ae74cc21f99e94';//'COLOQUE SUA KEY AQUI';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\n/*\r\n    - Originais da Netflix\r\n    - Recomendados (Trending)\r\n    - Em alta (Top rated)\r\n    - Ação\r\n    - Comédia\r\n    - Terror\r\n    - Romance\r\n    - Documentários\r\n*/\r\n\r\nconst basicFetch = async (endpoint) => {\r\n    const req = await fetch(`${API_BASE}${endpoint}`);\r\n    const json = await req.json();\r\n    return json;\r\n}\r\n\r\nexport default {\r\n    getHomeList: async () => {\r\n        return [\r\n            {\r\n                slug: 'originals',\r\n                title: 'Originais do Netflix',\r\n                type: 'tv',\r\n                items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'trending',\r\n                title: 'Recomendados para você',\r\n                type: 'tv',\r\n                items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n            }, \r\n            {\r\n                slug: 'toprated',\r\n                title: 'Em alta',\r\n                type: 'movie',\r\n                items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'action',\r\n                title: 'Ação',\r\n                type: 'movie',\r\n                items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'comedy',\r\n                title: 'Comédia',\r\n                type: 'movie',\r\n                items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'horror',\r\n                title: 'Terror',\r\n                type: 'movie',\r\n                items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'romance',\r\n                title: 'Romance',\r\n                type: 'movie',\r\n                items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'documentary',\r\n                title: 'Documentários',\r\n                type: 'movie',\r\n                items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n            }\r\n        ]\r\n    },\r\n    getMovieInfo: async (movieId, type) => {\r\n        let info = {};\r\n\r\n        if(movieId){\r\n            switch(type){\r\n                case 'movie':\r\n                    info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                break;\r\n                case 'tv':\r\n                    info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                break;\r\n                default: \r\n                    info = null;\r\n                break;\r\n            }\r\n        }\r\n        return info;\r\n    },\r\n    getTrailerVideo: async (movieId, type) => {\r\n        let trailer = {};\r\n\r\n        if(movieId){\r\n            switch(type){\r\n                case 'movie':\r\n                    trailer = await basicFetch(`/movie/${movieId}/videos?language=pt-BR&api_key=${API_KEY}`);\r\n                break;\r\n                case 'tv':\r\n                    trailer = await basicFetch(`/tv/${movieId}/videos?language=pt-BR&api_key=${API_KEY}`);\r\n                break;\r\n                default: \r\n                    trailer = null;\r\n                break;\r\n            }\r\n        }\r\n        return trailer;\r\n    },\r\n}","import React, { useState } from 'react';\r\nimport './styles.css';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction MovieRow( { title, items, type } ) {\r\n\r\n  const [scrollX, setScrollX] = useState(-400);\r\n\r\n  const handleLeftArrow = () => {\r\n    let x = scrollX + Math.round(window.innerWidth / 2);\r\n    if(x > 0){\r\n        x = 0;  \r\n    }\r\n    setScrollX(x);\r\n  }\r\n\r\n  const handleRightArrow = () => {\r\n    let x = scrollX - Math.round(window.innerWidth / 2);\r\n    let listW = items.results.length * 200;\r\n    if((window.innerWidth - listW) > x){\r\n        x = (window.innerWidth - listW) - 80;  \r\n    }\r\n    setScrollX(x);\r\n  }\r\n\r\n  return (\r\n    <div className=\"movieRow\">\r\n        <h2>{title}</h2>\r\n\r\n        <div className=\"movieRow--left\" onClick={handleLeftArrow}>\r\n          <NavigateBeforeIcon style={{fontSize: 50}}/>\r\n        </div>\r\n\r\n        <div className=\"movieRow--right\" onClick={handleRightArrow}>\r\n          <NavigateNextIcon style={{fontSize: 50}}/>\r\n        </div>\r\n\r\n        <div className=\"movieRow--listarea\">\r\n          <div \r\n            className=\"movieRow--list\"\r\n            style={{\r\n              marginLeft: scrollX,\r\n              width: items.results.length * 200\r\n            }}\r\n          >\r\n            {\r\n              items.results.length > 0 &&\r\n              items.results.map((item, key) => (\r\n                \r\n                item.poster_path !== null &&\r\n                    <div key={key} className=\"movieRow--item\">\r\n                      <Link to={`/details/${type}/${item.id}`}>\r\n                        <img alt={item.original_title} src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} />\r\n                      </Link>\r\n                    </div>\r\n              ))\r\n            }\r\n          </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieRow;\r\n","import React from 'react';\r\nimport './styles.css';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nfunction FeaturedMovie( { item } ) {\r\n\r\n  let firstDate = new Date(item.first_air_date);\r\n  let genres = [];\r\n  for(let i in item.genres){\r\n    genres.push(item.genres[i].name);\r\n  }\r\n  let description = item.overview.length > 200 ? item.overview.substring(0, 200) + '...' : item.overview;\r\n\r\n  return (\r\n    <section \r\n        className=\"featured\" \r\n        style={{\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n        }}\r\n    >\r\n        <div className=\"featured--vertical\">\r\n            <div className=\"featured--horizontal\">\r\n                <div className=\"featured--name\">{item.original_name}</div>\r\n                \r\n                <div className=\"featured--info\">\r\n                    <div className=\"featured--points\">{item.vote_average} pontos</div>\r\n                    <div className=\"featured--year\">{firstDate.getFullYear()}</div>\r\n                    <div className=\"featured--seasons\">{item.number_of_seasons} temperatura{item.number_of_seasons !== 1 ? 's' : ''}</div>\r\n                </div>\r\n\r\n                <div className=\"featured--description\">{description}</div>\r\n                <div className=\"featured--buttons\">\r\n                    <a className=\"featured--watchbutton\"><div><PlayArrowIcon /> Assitir</div></a>\r\n                    <a className=\"featured--mylistbutton\"><div><AddIcon />Minha Lista</div></a>\r\n                </div>\r\n                <div className=\"featured--genres\"><strong>Gêneros:</strong> {genres.join(', ')}</div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default FeaturedMovie;\r\n","import React from 'react';\r\nimport './styles.css';\r\n\r\nfunction Header( { black } ) {\r\n  return (\r\n    <header className={black ? 'black' : ''}>\r\n        <div className=\"header--logo\">\r\n          <a href=\"/\">\r\n            <img alt=\"Netflix\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1280px-Netflix_2015_logo.svg.png\" />\r\n          </a>  \r\n          <div>\r\n            Clone\r\n          </div>\r\n        </div>\r\n        <div className=\"header--user\">\r\n          <a href=\"/\">\r\n            <img alt=\"Usuário\" src=\"https://learning.royalbcmuseum.bc.ca/wp-content/uploads/2014/07/netflix-face.jpg\" />\r\n          </a>\r\n        </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Tmdb from '../../Tmdb';\r\nimport MovieRow from '../../components/MovieRow';\r\nimport FeaturedMovie from '../../components/FeaturedMovie';\r\nimport Header from '../../components/Header';\r\n\r\nimport './styles.css';\r\n\r\nfunction Home() {\r\n\r\n  const [featuredData, setFeaturedData] = useState(null);\r\n  const [movieList, setMovieList] = useState([]);\r\n  const [blackHeader, setBlackHeader] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const loadAll = async () => {\r\n      let list = await Tmdb.getHomeList();\r\n      setMovieList(list);\r\n\r\n      let originals = list.filter(i => i.slug === 'originals');\r\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\r\n      let movieChosen = originals[0].items.results[randomChosen];\r\n      \r\n      let movieChosenData = await Tmdb.getMovieInfo(movieChosen.id, 'tv');\r\n      setFeaturedData(movieChosenData);\r\n    }\r\n\r\n    loadAll();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const scrollListener = () => {\r\n      if(window.scrollY > 10) {\r\n        setBlackHeader(true);\r\n      }\r\n      else {\r\n        setBlackHeader(false);\r\n      }\r\n    }\r\n\r\n    window.addEventListener('scroll', scrollListener);\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', scrollListener);\r\n    }\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      \r\n      <Header black={blackHeader}/>\r\n\r\n      {\r\n        featuredData &&\r\n        <FeaturedMovie item={featuredData}/>\r\n      }\r\n      \r\n\r\n      <section className=\"lists\">\r\n        {\r\n          movieList.map((item, key) => (\r\n            <MovieRow key={key} title={item.title} items={item.items} type={item.type} />\r\n          ))\r\n        }\r\n      </section>\r\n\r\n      <footer>\r\n        <div>\r\n          <a href=\"https://www.netflix.com/br/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n           <img alt=\"Netflix\" width=\"18\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/0c/Netflix_2015_N_logo.svg/1200px-Netflix_2015_N_logo.svg.png\"/>\r\n          </a>\r\n          <a href=\"https://www.themoviedb.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <img alt=\"Themoviedb.org\" width=\"42\" src=\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_2-d537fb228cf3ded904ef09b136fe3fec72548ebc1fea3fbbd1ad9e36364db38b.svg\"/>\r\n          </a>\r\n        </div>\r\n        Feito com <span role=\"img\" aria-label=\"Coração\">❤️ por <a href=\"https://github.com/mcosta21\" target=\"_blank\" rel=\"noopener noreferrer\">Marcio Costa</a></span>\r\n      </footer>\r\n      \r\n      {\r\n        movieList.length <= 0 &&\r\n        <div className=\"loading\">\r\n          <img alt=\"Carregando\" src=\"https://media.wired.com/photos/592744d3f3e2356fd800bf00/master/w_2000,c_limit/Netflix_LoadTime.gif\"/>\r\n        </div>\r\n      }      \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Tmdb from '../../Tmdb';\r\nimport { useParams } from 'react-router';\r\nimport TheatersIcon from '@material-ui/icons/Theaters';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport AspectRatioIcon from '@material-ui/icons/AspectRatio';\r\nimport iconAmazon from '../../assets/icon-amazon.png';\r\nimport iconNetflix from '../../assets/icon-netflix.png';\r\nimport './styles.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Details(){\r\n    const { id, type } = useParams();\r\n\r\n    const [movieDetails, setMovieDetails] = useState({});\r\n    const [trailerVideo, setTrailerVideo] = useState([]);\r\n    const [urlVideo, setUrlVideo] = useState();\r\n    const [videoFullScreen, setVideoFullScreen] = useState(false);\r\n    const [descriptionVideo, setDescriptionVideo] = useState();\r\n\r\n    useEffect(() => {\r\n        const loadAll = async () => {\r\n            let movie = await Tmdb.getMovieInfo(id, type);\r\n            let trailer = await Tmdb.getTrailerVideo(id, type)\r\n            setMovieDetails(movie);\r\n            setTrailerVideo(trailer);\r\n            setDescriptionVideo(movie.overview.length > 120 ? movie.overview.substring(0, 120) + '...' : movie.overview);\r\n            //console.log(movie)\r\n        }\r\n        loadAll();\r\n    }, [id, type])\r\n    \r\n    function handleShowTrailer(){\r\n        const trailer = trailerVideo.results;\r\n        if(trailer !== undefined && trailer.length > 0){\r\n            const url = `https://youtube.com/embed/${trailer[0].key}?autoplay=1&controls=0&showinfo=0&autohide=1`;\r\n            setUrlVideo(url);\r\n        }\r\n    }\r\n\r\n    function handleVideoFullScreen(){\r\n        setVideoFullScreen(!videoFullScreen);\r\n    }\r\n    \r\n    \r\n    return (\r\n        <main \r\n            className=\"details\" \r\n            style={{\r\n                backgroundSize: 'cover',\r\n                backgroundPosition: 'center',\r\n                backgroundImage: `url(https://image.tmdb.org/t/p/original/${movieDetails.backdrop_path})`\r\n            }}\r\n        >   \r\n        <Link to=\"/\" className=\"details--backbutton\">Voltar</Link>\r\n            <section> \r\n                <div>\r\n                    <div className=\"details--info\">\r\n                        <h3 className={movieDetails.vote_average > 5 ? 'positive' : 'negative'}>{movieDetails.vote_average * 10 + '%'}</h3>\r\n                    </div>\r\n\r\n                    <h1>{movieDetails.original_title || movieDetails.original_name}</h1>\r\n\r\n                    <h4>{descriptionVideo}</h4>\r\n\r\n                    {\r\n                        (trailerVideo.results !== undefined && trailerVideo.results.length !== 0)\r\n                        &&\r\n                        <a onClick={() => handleShowTrailer()} className=\"details--viewtrailer\"><div><TheatersIcon />Assistir trailer</div></a>\r\n                    }\r\n                     {\r\n                        (movieDetails.homepage !== undefined && movieDetails.homepage !== '') && \r\n                            <a href={movieDetails.homepage} target=\"_blank\" rel=\"noopener noreferrer\" className=\"details--officialsite\">\r\n                                <div>\r\n                                    {\r\n                                        movieDetails.homepage.includes('netflix') ?\r\n                                        <img alt=\"Netflix\" src={iconNetflix} width=\"23\"/> :\r\n                                        movieDetails.homepage.includes('amazon') ?\r\n                                        <img alt=\"Amazon\" src={iconAmazon} width=\"23\"/> :\r\n                                        <LanguageIcon />\r\n                                    }\r\n                                \r\n                                </div>\r\n                            </a>\r\n                     }\r\n                </div>\r\n            </section>\r\n            {\r\n                urlVideo !== undefined\r\n                &&\r\n                <aside className={videoFullScreen ? 'video--fullscreen' : ''}>\r\n                    <div>\r\n                        <button onClick={() => handleVideoFullScreen()}><AspectRatioIcon /></button>\r\n                    </div>\r\n                    <iframe frameBorder=\"0\" height=\"100%\" width=\"100%\" title=\"1\"\r\n                        src={urlVideo}>\r\n                    </iframe>\r\n                </aside>\r\n            }\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Details;","import React from 'react';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\r\n\r\nimport Home from './pages/Home';\r\nimport Details from './pages/Details';\r\n\r\nfunction Routes(){\r\n    return(\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Home} />\r\n                <Route path=\"/details/:type/:id\" exact component={Details} />\r\n            </Switch>        \r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default Routes;","import React from 'react';\r\nimport Routes from '../routes';\r\n\r\nfunction Screen() {\r\n  return (\r\n        <Routes/>\r\n  );\r\n}\r\n\r\nexport default Screen;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Screen from './screen';;\n\n\nReactDOM.render(\n    <Screen />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}